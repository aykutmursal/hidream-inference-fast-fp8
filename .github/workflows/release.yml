name: Release

on:
  workflow_dispatch:
    inputs:
      model_type:
        description: 'Which model to build & push (fast-fp8, fast-bf16, dev-fp8, dev-bf16)'
        required: true
        default: 'fast-fp8'
        type: choice
        options:
          - fast-fp8
          - fast-bf16
          - dev-fp8
          - dev-bf16
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && !contains(github.event.head_commit.message, 'chore(release)')) }}
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

      - name: Clear space to remove unused folders
        run: |
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Update the ToC in the README.md
        run: npx markdown-toc README.md -i

      - name: Semantic release
        uses: codfish/semantic-release-action@v3
        id: semanticrelease
        with:
          additional-packages: |
            ['@semantic-release/git', '@semantic-release/changelog', '@semantic-release/exec']
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment variables
        if: steps.semanticrelease.outputs.new-release-published == 'true'
        run: |
          echo "DOCKERHUB_REPO=${{ vars.DOCKERHUB_REPO }}" >> $GITHUB_ENV
          echo "DOCKERHUB_IMG=${{ vars.DOCKERHUB_IMG }}" >> $GITHUB_ENV
          echo "HUGGINGFACE_ACCESS_TOKEN=${{ secrets.HUGGINGFACE_ACCESS_TOKEN }}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${{ steps.semanticrelease.outputs.release-version }}" >> $GITHUB_ENV

      - name: Build and push the images to Docker Hub
        if: steps.semanticrelease.outputs.new-release-published == 'true'
        uses: docker/bake-action@v2
        with:
          push: true
          targets: ${{ github.event_name == 'workflow_dispatch' ? github.event.inputs.model_type : 'fast-fp8,fast-bf16,dev-fp8,dev-bf16' }}
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO }}/${{ env.DOCKERHUB_IMG }}:cache
          cache-to:   type=registry,ref=${{ env.DOCKERHUB_REPO }}/${{ env.DOCKERHUB_IMG }}:cache,mode=max
          set: |
            *.args.DOCKERHUB_REPO=${{ env.DOCKERHUB_REPO }}
            *.args.DOCKERHUB_IMG=${{ env.DOCKERHUB_IMG }}
            *.args.RELEASE_VERSION=${{ env.RELEASE_VERSION }}
            *.args.HUGGINGFACE_ACCESS_TOKEN=${{ env.HUGGINGFACE_ACCESS_TOKEN }}

      - name: Update description on Docker Hub
        if: steps.semanticrelease.outputs.new-release-published == 'true'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKERHUB_REPO }}/${{ env.DOCKERHUB_IMG }}
